import React, { useEffect, useState } from 'react';

import Head from 'next/head'
import styles from '../styles/Home.module.css'

import loadable from '@loadable/component';
import axios from 'axios';
import { Input, Button, Select, Heading, SimpleGrid } from '@chakra-ui/react'

const ReactJson = loadable(() => import('react-json-view'));

export default function Home() {

  const [code, setCode] = useState();
  const [contractAddr, setContractAddr] = useState("0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d");
  const [tokenID, setTokenID] = useState("2");
  const [n, setN] = useState("ethereum");
  const [t, setT] = useState("mainnet");
  const [raw, setRaw] = useState(false);

  const network = {
    ethereum : {
      mainnet: "https://eth-mainnet.g.alchemy.com/v2/",
      rinkeby: "https://eth-rinkeby.alchemyapi.io/v2/",
      goerli: "https://eth-goerli.alchemyapi.io/v2/",
      kovan: "https://eth-kovan.alchemyapi.io/v2/",
      ropsten: "https://eth-ropsten.alchemyapi.io/v2/"
    },
    polygon: {
      mainnet: "https://polygon-mainnet.g.alchemy.com/v2/",
      mumbai: "https://polygon-mumbai.g.alchemy.com/v2/"
    }
  }
  
  const search = () => {    
    const baseURL = `${network[n][t]}${process.env.apiKey}/getNFTMetadata`;
    const tokenType = "erc721";
    var config = {
      method: 'get',
      url: `${baseURL}?contractAddress=${contractAddr}&tokenId=${tokenID}&tokenType=${tokenType}`,
      headers: { }
    };

    console.log(baseURL)

    axios(config)
      .then(response => {
        console.log(response.data)
        setCode(response.data)
        })
      .catch(error => console.log(error));
  }

  useEffect(() => {
    const baseURL = `${network[n][t]}${process.env.apiKey}/getNFTMetadata`;
    const tokenType = "erc721";
    var config = {
      method: 'get',
      url: `${baseURL}?contractAddress=${contractAddr}&tokenId=${tokenID}&tokenType=${tokenType}`,
      headers: { }
    };
    axios(config)
      .then(response => setCode(response.data))
      .catch(error => console.log(error));
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>NFT Metadata</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>

      <main style={{paddingTop:"10px"}}>
        <Heading>NFT Metadata</Heading>
          <Input variant='flushed' value={contractAddr} style={{marginBottom:"15px"}} placeholder='Contract address' onChange={(e) => setContractAddr(e.target.value)} />
          <SimpleGrid columns={{sm: 1, md: 3, lg: 5}} gap={6}>
            <Input variant='flushed' value={tokenID} placeholder='Token ID' onChange={(e) => setTokenID(e.target.value)} />
            <Select defaultValue={{label: n, value: n}} onChange={e => { 
              setN(e.target.value); 
              setT("mainnet"); 
              } }>
              {Object.keys(network).map(k => {
                return(
                  <option default key={k} value={k}>{k}</option>
                )
              })}
            </Select>
            <Select defaultValue={{label: t, value: t}} onChange={e => setT(e.target.value)}>
              {Object.keys(network[n]).map(k => {
                return(
                  <option key={k} value={k}>{k}</option>
                )
              })}
            </Select>
            <Button onClick={() => setRaw(prev => !prev)}>{!raw ? "RAW" : "JSON" }</Button>
            <Button onClick={search}>Search</Button>
          </SimpleGrid>
          
          <div style={{overflow:"scroll", marginTop:"25px"}}>
            {raw ? <div style={{wordBreak:"break-all"}}>{JSON.stringify(code)}</div> : <ReactJson src={code} style={{wordBreak:"break-all"}}/>}
          </div>
      </main>

      <footer className={styles.footer}>
        <b>
        <a
          href="https://twitter.com/esotterik"
          target="_blank"
          rel="noopener noreferrer"
        >
          @esotterik{''}
        </a>
        </b>
      </footer>
    </div>
  )
}
